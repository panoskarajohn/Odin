version: '3.7'

services:
  webapigateway:
    image: ${DOCKER_REGISTRY-}webapigateway
    build:
      context: .
      dockerfile: src/Services/WebApiGateway/Dockerfile

  event.api:
    image: ${DOCKER_REGISTRY-}eventapi
    build:
      context: .
      dockerfile: src/Services/Event/Event.Api/Dockerfile
    depends_on:
     - mongodb

  event.grpc:
    image: ${DOCKER_REGISTRY-}eventgrpc
    build:
      context: .
      dockerfile: src/Services/Event/Event.Grpc/Dockerfile

  slip.api:
    image: ${DOCKER_REGISTRY-}slipapi
    build:
      context: .
      dockerfile: src/Services/Slip/Slip.Api/Dockerfile
  
  slip.worker:
    image: ${DOCKER_REGISTRY-}slipworker
    build:
      context: .
      dockerfile: src/Services/Slip/Slip.Service/Dockerfile
  
  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.Api/Dockerfile
    depends_on:
     - postgres

  prometheus:
    build: ./prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    networks:
      - odin
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    networks:
      - odin
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
  
  grafana:
    image: grafana/grafana
    container_name: dev_grafana
    networks:
      - odin
    ports:
      - "30091:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "odin-rabbit"
    networks:
      - odin
  
  sqlserver:
    container_name: mssql
    image: "mcr.microsoft.com/mssql/server:2017-latest"
    volumes:
      - sqlserver-data:/var/opt/mssql/data
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "pa55w0rd!"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    networks:
      - odin
  
  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - odin
    volumes:
      - redis:/data
  
  seq:
    image: datalust/seq
    container_name: seq
    restart: unless-stopped
    networks:
      - odin
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80
   
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always
    networks:
    - odin
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
  
volumes:
  postgres:
    driver: local
  sqlserver-data:
  redis:
    driver: local
  mongodb_data_container:
  grafana-data:

networks:
  odin:
    name: odin-network